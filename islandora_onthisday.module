<?php

/**
 * @file
 * Module file.
 */

/**
 * Implements hook_menu().
 */
function islandora_onthisday_menu() {
  $items = array();
  $items['admin/islandora/tools/onthisday'] = array(
    'title' => 'Islandora On This Day',
    'description' => 'Configure the Islandora On This Day module.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('islandora_onthisday_admin_settings'),
    'access arguments' => array('administer site configuration'),
    'type' => MENU_NORMAL_ITEM,
  );
  $items['onthisday'] = array(
    'title' => 'On This Day',
    'page callback' => 'islandora_onthisday_gallery',
    'access arguments' => array(ISLANDORA_VIEW_OBJECTS),
    'type' => MENU_CALLBACK,
  );
  $items['onthisday/rss'] = array(
    'page callback' => 'islandora_onthisday_rss_channel',
    'delivery callback' => 'islandora_onthisday_rss_output',
    'access arguments' => array(ISLANDORA_VIEW_OBJECTS),
    'type' => MENU_CALLBACK,
  );
  $items['onthisday/json'] = array(
    'page callback' => 'islandora_onthisday_json',
    'access arguments' => array(ISLANDORA_VIEW_OBJECTS),
    'type' => MENU_CALLBACK,
  );
  return $items;
}

/**
 * Admin settings form builder.
 */
function islandora_onthisday_admin_settings() {
  $form['islandora_onthisday_date_fields'] = array(
    '#title' => t('Date fields in Solr to query and retrieve'),
    '#type' => 'textfield',
    '#size' => 160,
    '#default_value' => variable_get('islandora_onthisday_date_fields', 'mods_originInfo_dateIssued_ms, mods_originInfo_dateCreated_ms'),
    '#description' => t("Comma-separated list of Solr field names to query for dates (and to retrieve in results to get the object's year). Date values are assumed to be in YYYY-MM-DD format. For best results, uses fields that are multivalued and that are tokenized."),
    '#maxlength' => 255,
  );
  $form['islandora_onthisday_sort_field'] = array(
    '#title' => t('Date field to sort on'),
    '#type' => 'textfield',
    '#size' => 160,
    '#default_value' => variable_get('islandora_onthisday_sort_field', ''),
    '#description' => t('The Solr field to sort results on, followed by " asc" or " desc" (for example, "mods_originInfo_dateIssued_dt asc"). You must use a field that is not multivalued. Leave blank to bypass Solr sorting and sort on the year value parsed out from the metadata.'),
    '#maxlength' => 255,
  );
  $form['islandora_onthisday_filter_queries'] = array(
    '#title' => t('Filter queries'),
    '#type' => 'textarea',
    '#default_value' => variable_get('islandora_onthisday_filter_queries', ''),
    '#description' => t('Solr queries that filter out objects from the daily list. For example, "PID:foo\:*" will filter out all objects with the namespace "foo"; "RELS_EXT_isMemberOfCollection_uri_ss:info\:fedora/islandora\:sp_basic_image_collection" will filter out all objects in the Basic Image collection; "RELS_EXT_isPageOf_uri_ms:*" will filter out all book and newspaper page objects. Enter one query per line. Queries will be "OR"ed together.'),
  );
  if (module_exists('token')) {
    $header_description = t('Header for /onthisday. HTML markup and !tokens (for example, "[date:custom:F j]") are allowed.', array('!tokens' => l(t('tokens'), '/admin/help/token')));
  }
  else {
    $header_description = t('Header for /onthisday. HTML markup is allowed.');
  }
  $form['islandora_onthisday_exclude_collections'] = array(
    '#title' => t('Collections to exclude'),
    '#type' => 'textfield',
    '#size' => 160,
    '#default_value' => variable_get('islandora_onthisday_exclude_collections', 'islandora:root'),
    '#description' => t('Comma-separated list of PIDs for collections to exclude.'),
  );
  $form['islandora_onthisday_exclude_cmodels'] = array(
    '#title' => t('Content models to exclude'),
    '#type' => 'textfield',
    '#size' => 160,
    '#default_value' => variable_get('islandora_onthisday_exclude_cmodels', 'islandora:newspaperPageCModel,islandora:pageCModel'),
    '#description' => t('Comma-separated list of PIDs for content models to exclude. No spaces. See <a href="https://wiki.duraspace.org/display/ISLANDORA/Solution+Packs#SolutionPacks-SolutionPacksandContentModels" target="_blank">the Islandora Wiki</a> for a list of PIDs.'),
  );
  $form['islandora_onthisday_header'] = array(
    '#title' => t('Gallery header'),
    '#type' => 'textarea',
    '#default_value' => variable_get('islandora_onthisday_header', ''),
    '#description' => $header_description,
  );
  $form['islandora_onthisday_show_collections'] = array(
    '#type' => 'checkbox',
    '#title' => t('Display collection links in gallery'),
    '#default_value' => variable_get('islandora_onthisday_show_collections', 0),
    '#description' => t('Display links to collections object is in. Note: collection membership for page objects and children of compound objects will only appear if it is indexed in Solr\'s "ancestors_mt" field. To display collection links in the On This Day block, see its configuration form.'),
  );
  $form['islandora_onthisday_set_limit'] = array(
    '#type' => 'checkbox',
    '#title' => t('Limit number of objects in gallery'),
    '#default_value' => variable_get('islandora_onthisday_set_limit', 0),
    '#description' => t('Limit the number of objects in the "On this day" gallery.'),
  );
  $form['islandora_onthisday_max_objects'] = array(
    '#title' => t('Maximum number of objects to show'),
    '#type' => 'textfield',
    '#size' => 10,
    '#default_value' => variable_get('islandora_onthisday_max_objects', '50'),
    '#maxlength' => 5,
    '#description' => t('Objects shown will be a randomly selected subset of all matching objects.'),
    '#states' => array(
      'visible' => array(
        ':input[name="islandora_onthisday_set_limit"]' => array('checked' => TRUE),
      ),
    ),
  );
  $form['islandora_onthisday_cache_data'] = array(
    '#type' => 'checkbox',
    '#title' => t('Cache list of daily objects'),
    '#default_value' => variable_get('islandora_onthisday_cache_data', 0),
    '#description' => t("May improve performance on large or busy sites, and sites that do not use Drupal's page caching."),
  );
  $form['islandora_onthisday_test_dates_enable'] = array(
    '#type' => 'checkbox',
    '#title' => t('Enable adding test date in URL, e.g., /onthisday/02-26'),
    '#default_value' => variable_get('islandora_onthisday_test_dates_enable', 0),
    '#description' => t('For testing purposes only; disable in production. Test date must be in mm-dd format. Does not work if caching is enabled.'),
  );
  $form['islandora_onthisday_show_debugging_metadata'] = array(
    '#type' => 'checkbox',
    '#title' => t('Display debugging metadata'),
    '#default_value' => variable_get('islandora_onthisday_show_debugging_metadata', 0),
    '#description' => t('Display values of metadata fields configured above to admin users for debugging purposes.'),
  );
  return system_settings_form($form);
}

/**
 * Implements hook_theme().
 */
function islandora_onthisday_theme() {
  return array(
    'islandora_onthisday_gallery' => array(
      'template' => 'theme/islandora-onthisday-gallery',
      'file' => 'theme/theme.inc',
      'variables' => array('islandora_objects' => NULL),
    ),
    'islandora_onthisday_object' => array(
      'template' => 'theme/islandora-onthisday-object',
      'file' => 'theme/theme.inc',
      'variables' => array('islandora_object' => NULL),
    ),
    'islandora_onthisday_collection_links' => array(
      'template' => 'theme/islandora-onthisday-collection-links',
      'file' => 'theme/theme.inc',
      'variables' => array('islandora_object' => NULL),
    ),
    'islandora_onthisday_rss_channel' => array(
      'template' => 'theme/islandora-onthisday-rss-channel',
      'file' => 'theme/theme.inc',
      'variables' => array('islandora_objects' => NULL),
    ),
  );
}

/**
 * Implements hook_cron().
 */
function islandora_onthisday_cron() {
  module_load_include('inc', 'islandora_onthisday', 'includes/utilities');
  islandora_onthisday_clear_cache();
}

/**
 * Implements hook_block_info().
 */
function islandora_onthisday_block_info() {
  return array(
    'islandora_onthisday_random' => array(
      'visibility' => BLOCK_VISIBILITY_LISTED,
      'cache' => DRUPAL_NO_CACHE,
      'info' => t('Islandora On This Day'),
    ),
  );
}

/**
 * Implements hook_block_view().
 */
function islandora_onthisday_block_view($delta = '') {
  switch ($delta) {
    case 'islandora_onthisday_random':
      module_load_include('inc', 'islandora_onthisday', 'includes/utilities');
      if ($object = islandora_onthisday_get_random_object()) {
        drupal_add_css(drupal_get_path('module', 'islandora_onthisday') . '/css/islandora_onthisday.css');

        $links_markup = '';
        if (variable_get('islandora_onthisday_show_collections_in_block', 0)) {
          $links_markup = theme('islandora_onthisday_collection_links', array('islandora_object' => $object));
        }

        $more_url = url("/onthisday");
        if (variable_get('islandora_onthisday_see_more_link', 0)) {
          $more_markup = ' <span id="islandora-onthisday-random-more"><a href="' . $more_url . '">' . t('(See more)') . '</a></span>';
        }
        else {
          $more_markup = '';
        }

        $block['subject'] = t('On This Day');
        $block['content'] = array(
          '#markup' => '<div id="islandora-onthisday-random">' . theme('islandora_onthisday_object',
            array('islandora_object' => $object)) . '</div>' . $links_markup . $more_markup);
      }
      else {
        return FALSE;
      }
      break;
  }
  return $block;
}

/**
 * Implements hook_block_configure().
 */
function islandora_onthisday_block_configure($delta) {
  $form = array();
  switch ($delta) {
    case 'islandora_onthisday_random':
      $form['islandora_onthisday_show_collections_in_block'] = array(
        '#type' => 'checkbox',
        '#title' => t('Display collection links in block'),
        '#description' => t('Include links to the collection(s) the object is in. See the main On This Day options form for more info.'),
        '#default_value' => variable_get('islandora_onthisday_show_collections_in_block', 0),
      );
      $form['islandora_onthisday_see_more_link'] = array(
        '#type' => 'checkbox',
        '#title' => t('Display "See more" link'),
        '#description' => t('Include the "See more" link to /onthisday.'),
        '#default_value' => variable_get('islandora_onthisday_see_more_link', 0),
      );
      break;
  }
  return $form;
}

/**
 * Implements hook_block_save().
 */
function islandora_onthisday_block_save($delta = '', $edit = array()) {
  switch ($delta) {
    case 'islandora_onthisday_random':
      variable_set('islandora_onthisday_see_more_link', $edit['islandora_onthisday_see_more_link']);
      variable_set('islandora_onthisday_show_collections_in_block', $edit['islandora_onthisday_show_collections_in_block']);
      break;
  }
}

/**
 * Menu callback.
 */
function islandora_onthisday_gallery($test_date = FALSE) {
  if ($test_date && variable_get('islandora_onthisday_test_dates_enable', 0)) {
    $date = $test_date;
  }
  else {
    $date = date('F j');
  }
  drupal_set_title("On this day, $date");
  module_load_include('inc', 'islandora_onthisday', 'includes/utilities');
  if (variable_get('islandora_onthisday_test_dates_enable', 0)) {
    $objects = islandora_onthisday_get_objects($test_date);
  }
  else {
    $objects = islandora_onthisday_get_objects();
  }
  $output = theme('islandora_onthisday_gallery', array('islandora_objects' => $objects));
  return $output;
}

/**
 * Menu callback.
 */
function islandora_onthisday_rss_channel() {
  module_load_include('inc', 'islandora_onthisday', 'includes/utilities');
  $objects = islandora_onthisday_get_objects();
  $output = theme('islandora_onthisday_rss_channel', array('islandora_objects' => $objects));
  return $output;
}

/**
 * Menu callback.
 */
function islandora_onthisday_json() {
  module_load_include('inc', 'islandora_onthisday', 'includes/utilities');
  $objects = islandora_onthisday_get_objects();
  drupal_json_output($objects);
  exit();
}

/**
 * Delivery callback.
 */
function islandora_onthisday_rss_output($rss_output) {
  drupal_add_http_header('Content-Type', 'application/rss+xml; charset=utf-8');
  print $rss_output;
}
